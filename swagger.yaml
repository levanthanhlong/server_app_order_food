openapi: 3.0.0
info:
  title: Food Ordering API
  description: API docs for user, food items, and orders
  version: 1.0.0
servers:
  - url: http://localhost:7777

components:
  securitySchemes:
    bearerAuth:             # tên scheme
      type: http
      scheme: bearer
      bearerFormat: JWT     # có thể bỏ, nhưng nên có để UI hiển thị

security:
  - bearerAuth: [] 

paths:
  /api/user/createNewUser:
    post:
      summary: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                fullname:
                  type: string
                employeeCode:
                  type: string
              required:
                - username
                - password
                - fullname
                - employeeCode
      responses:
        "200":
          description: User registered successfully

  /api/user/login:
    post:
      summary: User login
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: Login success

  /api/user/getUserInfo:
    get:
      summary: Get user info by token
      tags:
        - User
      security:             
        - bearerAuth: []
      responses:
        "200":
          description: Success

  /api/foodItems/getFoodItemsOnThisWeek:
    get:
      summary: Get food items available for this week
      tags:
        - FoodItems
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success - return food items list
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: "Lấy danh sách món ăn trong tuần thành công!"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "Cơm gà xối mỡ"
                        date:
                          type: string
                          format: date
                          example: "2025-09-01"

  /api/orders/createOrder/{id}:
    post:
      summary: Create a new order
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the food item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  example: 2
                statusOrder:
                  type: string
                  example: pending
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: Tạo đơn hàng thành công!
                  orderId:
                    type: integer
                    example: 123
        "400":
          description: Bad request (duplicate order or past deadline)
        "404":
          description: Food item not found
        "500":
          description: Internal server error

  /api/orders/cancelOrder/{id}:
    delete:
      summary: Cancel an order by foodId
      description: Hủy đơn hàng của user với foodId cụ thể (chỉ được hủy trước 10h ngày phục vụ).
      tags:
        - Orders
      security:
        - bearerAuth: []   # yêu cầu Bearer Token
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID của món ăn (foodId) cần hủy đơn
      responses:
        "200":
          description: Huỷ đơn hàng thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: "Huỷ đơn hàng thành công!"
        "400":
          description: Quá hạn hủy đơn (sau 10h sáng ngày phục vụ)
        "404":
          description: Không tìm thấy đơn hàng hoặc không có quyền huỷ
        "500":
          description: Lỗi server khi huỷ đơn hàng
                
  /api/orders/getAllOrdersByUserId:
    get:
      summary: Get all orders of current user
      description: Lấy tất cả đơn hàng theo userId từ token đã đăng nhập
      tags:
        - Orders
      security:             
        - bearerAuth: []   # yêu cầu Bearer Token (JWT)
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  count:
                    type: integer
                    example: 2
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        orderId:
                          type: integer
                          example: 101
                        userId:
                          type: integer
                          example: 1
                        status:
                          type: string
                          example: "completed"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-09-01T10:20:30Z"
        "401":
          description: Unauthorized - Missing or invalid token
        "500":
          description: Internal server error

  /api/orders/getAllOrderByUserIdForMonthYear:
    post:
      summary: Get all orders of current user by month and year
      description: Lấy danh sách đơn hàng của user theo tháng và năm (dựa trên token)
      tags:
        - Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                month:
                  type: integer
                  example: 9
                year:
                  type: integer
                  example: 2025
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        orderId:
                          type: integer
                          example: 105
                        userId:
                          type: integer
                          example: 1
                        status:
                          type: string
                          example: "pending"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-09-01T14:30:00Z"
        "401":
          description: Unauthorized - Missing or invalid token
        "500":
          description: Internal server error
              